name: Build and Sign Docker Image with Provenance (amd64 only)

on:
  push:
    branches: [ main ]

  schedule:
    - cron: '0 3 1 */1 *'  # 3:00 AM UTC on the 1st of every month

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build-and-provenance:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: [ '8.18.1', 'latest' ]

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/parsedmarc
      PARSEDMARC_VERSION: 8.18.1

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Image (${{ matrix.tag }})
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --build-arg PARSEDMARC_VERSION=${{ env.PARSEDMARC_VERSION }} \
          -t $IMAGE_NAME:${{ matrix.tag }} \
          --push .

    - name: Install Cosign
      run: |
        COSIGN_VERSION="v2.2.3"
        curl -sSfL https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64 -o cosign
        chmod +x cosign
        sudo mv cosign /usr/local/bin/

    - name: Get image digest (${{ matrix.tag }})
      id: digest
      run: |
        DIGEST=$(docker buildx imagetools inspect $IMAGE_NAME:${{ matrix.tag }} --format '{{ .Digest }}')
        echo "digest=$DIGEST"
        echo "digest=$DIGEST" >> $GITHUB_OUTPUT

    - name: Generate SLSA Provenance (${{ matrix.tag }})
      run: |
        COMMIT=$(git rev-parse HEAD)
        FULL_DIGEST="${{ steps.digest.outputs.digest }}"
        STRIPPED_DIGEST=${FULL_DIGEST#sha256:}

        cat <<EOF > provenance.json
        {
          "_type": "https://in-toto.io/Statement/v0.1",
          "subject": [
            {
              "name": "${{ env.IMAGE_NAME }}@$FULL_DIGEST",
              "digest": {
                "sha256": "$STRIPPED_DIGEST"
              }
            }
          ],
          "predicateType": "https://slsa.dev/provenance/v0.2",
          "predicate": {
            "builder": {
              "id": "https://github.com/${{ github.repository }}/.github/workflows/${{ github.workflow }}@${{ github.ref }}"
            },
            "buildType": "https://github.com/Attestations/GitHubActionsWorkflow",
            "invocation": {
              "configSource": {
                "uri": "git+https://github.com/${{ github.repository }}",
                "digest": {
                  "sha1": "$COMMIT"
                },
                "entryPoint": "${{ github.workflow }}"
              },
              "parameters": {
                "dockerfile": "Dockerfile",
                "parsedmarc_version": "${{ env.PARSEDMARC_VERSION }}",
                "platform": "linux/amd64"
              },
              "environment": {
                "os": "${{ runner.os }}"
              }
            },
            "buildConfig": {
              "steps": [
                {
                  "command": [
                    "docker", "buildx", "build", "--platform", "linux/amd64",
                    "--build-arg", "PARSEDMARC_VERSION=${{ env.PARSEDMARC_VERSION }}",
                    "-t", "${{ env.IMAGE_NAME }}:${{ matrix.tag }}", ".", "--push"
                  ]
                }
              ]
            },
            "materials": [
              {
                "uri": "git+https://github.com/${{ github.repository }}",
                "digest": {
                  "sha1": "$COMMIT"
                }
              }
            ]
          }
        }
        EOF

    - name: Attach SLSA Provenance (${{ matrix.tag }})
      run: |
        cosign attest \
          --yes \
          --predicate provenance.json \
          --type https://slsa.dev/provenance/v0.2 \
          $IMAGE_NAME@${{ steps.digest.outputs.digest }}

    - name: Make GHCR image public (${{ matrix.tag }})
      run: |
        REPO_OWNER=${{ github.repository_owner }}
        PACKAGE_NAME="parsedmarc"
        curl -s -X PATCH \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/users/$REPO_OWNER/packages/container/$PACKAGE_NAME/visibility \
          -d '{"visibility":"public"}'
